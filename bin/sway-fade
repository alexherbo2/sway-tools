#!/bin/sh

# A tool to fade windows.
#
# Usage:
#
# sway-fade
#
# Configuration:
#
# exec sway-fade

# Options
steps=10
time=0.1
begin_opacity=0.0
end_opacity=1.0

# Internal variables
stride=$(echo "($end_opacity - $begin_opacity) / $steps" | bc -l)
wait_duration=$(echo "$time / $steps" | bc -l)

# Functions
fade_in() {
  criteria=$1

  swaymsg "$criteria" -- opacity set "$begin_opacity"
  seq "$steps" |
  while read step; do
    swaymsg "$criteria" -- opacity plus "$stride"
    sleep "$wait_duration"
  done
  swaymsg "$criteria" -- opacity set "$end_opacity"
}

# Events
fade_in_on_new_window() {
  swaymsg --type subscribe --monitor '["window"]' |
  jq --unbuffered --compact-output 'select(.change == "new")' |

  # Add listener with context:
  while read properties; do
    fade_in '[con_id=__focused__]' &
  done
}

fade_in_on_changed_workspace() {
  swaymsg --type subscribe --monitor '["workspace"]' |
  jq --unbuffered --compact-output 'select(.change == "focus" and .current.output == .old.output)' |

  # Add listener with context:
  while read properties; do
    fade_in '[workspace=__focused__]' &
  done
}

# Add event listeners:
fade_in_on_new_window &
fade_in_on_changed_workspace &
wait
